<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.or.hku.classroom.mapper.TestPresMapper">
 	
	<resultMap type="testVO" id="testMap">
		<id property="testNo" column="test_no"/>
		<id property="lecapNo" column="lecap_no"/>
		<result property="testNo" column="test_no"/>
		<result property="proNo" column="pro_no"/>
		<result property="lecapNo" column="lecap_no"/>
		<result property="testSe" column="test_se"/>
		<result property="testBgngYmd" column="test_bgng_ymd"/>
		<result property="testTimeLimit" column="test_time_limit"/>
		<result property="testRegdate" column="test_regdate"/>
		<result property="testFile" column="test_file"/>
		<collection property="answerList" resultMap="answerMap"/>
	</resultMap> 	
	
	<resultMap type="testAnswerVO" id="answerMap">
		<result property="testNo" column="test_no"/>
		<result property="lecapNo" column="lecap_no"/>
		<result property="taNo" column="ta_no"/>
		<result property="taAns" column="ta_ans"/>
		<result property="taScr" column="ta_scr"/>
		<result property="answerCh" column="answer_ch"/>
	</resultMap>
 	
 	<!-- 해당 강의 중간고사 또는 기말고사 이미 출제했는지 확인 -->
 	<select id="testCheck" resultType="int" parameterType="testVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testCheck */
 		SELECT count(*)
		FROM test
		WHERE lecap_no = #{lecapNo}
		AND test_se like #{testSe}
 	</select>
 	
 	<!-- 시험 테이블에 저장 -->
 	<insert id="testInsert" parameterType="testVO" useGeneratedKeys="true">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testInsert */
 	<selectKey keyProperty="testNo" resultType="String" order="BEFORE">
 		SELECT seq_test.nextval FROM dual
 	</selectKey>
 		INSERT INTO test 
 		VALUES(#{testNo}, #{lecapNo}, #{testSe}, #{testBgngYmd}, #{testTimeLimit}, sysdate, #{testFile})
 	</insert>
 	
 	<!-- 시험 정답 테이블에 저장  -->
 	<insert id="testAnswerInsert" parameterType="testAnswerVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testAnswerInsert */
 		INSERT INTO test_answer 
 		VALUES(#{lecapNo}, #{testNo}, #{taNo}, #{taAns}, #{taScr}, #{answerCh})
 	</insert>
 	
 	<!-- 해당 시험지 상세 가져오기 -->
 	<select id="testDetail" parameterType="testVO" resultMap="testMap">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testDetail */
	 	SELECT 
	 		  a.test_no
            , c.pro_no
	 	    , a.lecap_no
	 	    , a.test_se
	 	    , a.test_bgng_ymd
	 	    , a.test_time_limit
	 	    , a.test_regdate
	 	    , a.test_file
	 	    , b.ta_no
	 	    , b.ta_ans
	 	    , b.ta_scr
	 	    , b.answer_ch
		FROM test a 
		LEFT OUTER JOIN test_answer b ON(a.test_no = b.test_no)
        LEFT OUTER JOIN lecture_aply c ON(a.lecap_no = c.lecap_no)
		WHERE a.lecap_no = #{lecapNo}
		AND a.test_se = #{testSe}
		ORDER BY b.ta_no
 	</select>
 	
 	<!-- 시험지 테이블 수정 -->
 	<update id="testUpdate" parameterType="testVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testUpdate */
 		UPDATE test
 		SET
 		   test_bgng_ymd = #{testBgngYmd},
 		   test_time_limit = #{testTimeLimit},
 		   test_regdate = sysdate
 		   <if test="testFile != '' and testFile != null">
 		   		,test_file = #{testFile}																																																	
 		   </if>
 		WHERE test_no = #{testNo}
 	</update>
 	
 	<!-- 시험지 답안 삭제 -->
 	<delete id="testAnswerDelete" parameterType="string">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testAnswerUpdate */
		DELETE FROM test_answer
		WHERE test_no = #{testNo}
 	</delete>
 	
 	<!-- 해당 학생의 모든 과목에 대한 시험 리스트 가져오기 -->
 	<select id="getTestList" parameterType="string" resultType="testVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.getTestList */
	 	SELECT a.test_no, a.lecap_no, a.test_se, a.test_bgng_ymd, a.test_time_limit, a.test_file, b.std_no,
		c.lecap_sem, c.lecap_yr, d.sub_nm, d.sub_grade
		FROM test a
		LEFT OUTER JOIN course_regist b ON(b.lecap_no = a.lecap_no)
		LEFT OUTER JOIN lecture_aply c ON(b.lecap_no = c.lecap_no)
		LEFT OUTER JOIN subject d ON(d.sub_no = c.sub_no)
		WHERE b.std_no = #{stdNo}
		AND c.lecap_yr like TO_CHAR(sysdate, 'YYYY')
		AND c.lecap_sem = CASE
		                        WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 2 AND 6 THEN 1
		                        WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 7 AND 12 THEN 2
		                        ELSE 0
		                    END
		ORDER BY a.test_no DESC
 	</select>
 	
 	<!-- 선지의 최대값 가져오기 -->
 	<select id="getMaxCh" parameterType="testVO" resultType="int">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.getMaxCh */
 		SELECT MAX(a.answer_ch)
		FROM test_answer a, test b
		WHERE a.test_no = b.test_no
		AND b.test_se like #{testSe}
		AND b.lecap_no = #{lecapNo}
 	</select>
 	
 	<!-- 시험답안 리스트 가져오기 -->
 	<select id="getAnswerList" resultType="testAnswerVO" parameterType="testVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.getAnswerList */	
	 	SELECT 
	 		  a.lecap_no
	 		, a.test_no
	 		, a.ta_no
	 		, a.ta_ans
	 		, a.ta_scr
	 		, a.answer_ch
		FROM test_answer a, test b
		WHERE a.test_no = b.test_no
		AND b.test_se like #{testSe}
		AND b.lecap_no = #{lecapNo}
		ORDER BY a.ta_no
 	</select>
 	
 	<!-- 시험 시작 할 시 등록될 테이블 -->
 	<insert id="testTakeInsert" parameterType="testVO" useGeneratedKeys="true">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.testTakeInsert */	
 	<selectKey keyProperty="ttNo" resultType="int" order="BEFORE">
 		SELECT seq_test_take.nextval FROM dual
 	</selectKey>
 		INSERT INTO test_take
 		VALUES(#{ttNo}, #{lecapNo}, #{testNo}, #{stdNo}, sysdate, 0)
 	</insert>
 	
 	<!-- 학생 제출 답안 등록 -->
 	<insert id="studentTestAnswerInsert" parameterType="studentAnswerVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.studentTestAnswerInsert */
 		INSERT INTO student_test_answer
 		VALUES(#{ttNo}, #{lecapNo}, #{testNo}, #{staNo}, #{staAns})
 	</insert>
 	
 	<!-- 시험 점수 결과 업데이트 -->
 	<update id="scoreUpdate" parameterType="map">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.scoreUpdate */	
 		UPDATE test_take 
 		SET
 			tt_scr = #{ttScr}
 		WHERE tt_no = #{ttNo}
 	</update>
 	
 	<!-- 시험에 응시했었는지 체크 -->
 	<select id="preTestCheck" parameterType="testVO" resultType="int">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.preTestCheck */	
 		SELECT COUNT(*)
 		FROM test_take
 		WHERE test_no = #{testNo}
 		AND std_no = #{stdNo}	
 	</select>
 	
 	<!-- 응시번호 가져오기 -->
 	<select id="getTtNo" parameterType="testVO" resultType="testVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.getTtNo */	
 		SELECT tt_no, tt_dt, tt_scr
 		FROM test_take
 		WHERE std_no = #{stdNo}
 		AND test_no = #{testNo}
 	</select>
 	
 	<!-- 해당 응시번호의 제출 답안 리스트 가져오기 -->
 	<select id="getStuAnsList" parameterType="int" resultType="studentAnswerVO">
 	/*kr.or.hku.classroom.mapper.TestPresMapper.getStuAnsList */	
 		SELECT tt_no, test_no, lecap_no, sta_no, sta_ans
 		FROM student_test_answer
 		WHERE tt_no = #{ttNo}
 		ORDER BY sta_no
 	</select>
 </mapper>